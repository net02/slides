		.data
		menu: .asciiz "\n \nPer calcolare la lunghezza digita 1); \n Per uscire digita 2)"
		invio: .asciiz " \n Poi premi invio "
		parola: .asciiz "\n Parola numero "
		conto: .asciiz ": "		
		ris:  .asciiz "\n Ultima parola: "
		str: 	.asciiz "\n Inserisci una stringa o un numero: "
		strBuffer: .space 256
		saluto: .asciiz "\n Arrivederci"
		errore: .asciiz "\n Hai sbagliato,riprova \n"

		.text
		.globl __start
__start:
		move $t0, $zero 
		move $t1, $zero	
		move $t2, $zero	
		move $t3, $zero	
		move $t4, $zero
		move $t5, $zero
		move $t6, $zero
		move $t7, $zero
		li	$v0,4        	
		la	$a0,menu
		syscall         	
   		li	$v0,4       
    	la	$a0,invio
    	syscall     
		li	$v0,5        	
    	syscall     
    	beq	$v0,1,length
    	beq	$v0,2,esci
		bne $v0,1,err
length:	li	$v0,4
    	la	$a0,str
    	syscall      
		li	$v0,8    
    	la	$a0,strBuffer 
    	li	$a1,256
    	syscall        
		la	$t0,strBuffer 
loop:	lb	$t1, 0($t0)
		beq	$t1,0x0a,risultato
		addi $t0,$t0,1
		beq	$t1,0x20,newword
		jal isletter
		j	loop 
newword:li	$v0, 4   
    	la	$a0, parola
    	syscall 
		addi $t3,$t3,1            	
		li	$v0,1 
    	move $a0,$t3 
    	syscall
		li	$v0, 4 
    	la	$a0, conto
    	syscall
		li	$v0,1
    	move $a0,$t2 
    	syscall 
		move $t2, $zero	
		j	loop
risultato:li $v0, 4 
    	la	$a0, ris
    	syscall 
		li	$v0,1 
    	move $a0,$t2 
    	syscall
		j	__start
esci:	li	$v0,4 
		la	$a0,saluto
		syscall       
		li $v0,10
		syscall
err:	li	$v0,4 
		la	$a0,errore
		syscall  
		j	 __start	
isletter: ori $t1, $t1, 0x20
		blt $t1, 0x61, exit	
		bgt $t1, 0x7a, exit
		addi	$t2, $t2,1	
exit:	jr $ra		
